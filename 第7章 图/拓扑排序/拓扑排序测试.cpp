
//**************************引入头文件*****************************
#include <stdio.h>   //使用了标准库函数 
#include <stdlib.h>  //使用了动态内存分配函数 

#include "my_constants.h"  //引入自定义的符号常量，主要是状态码 
#include "ALGraph.h"       //引入图的邻接表存储结构定义 
#include "LinkedList.cpp"  //引入单链表实现，用到其中的插入、删除等操作 
#include "ALGraph.cpp"     //引入图的邻接表存储结构基本操作实现
#include "Stack.cpp"       //引入顺序栈的基本操作实现 
#include "TopologicalSort.cpp" //引入图的拓扑排序算法实现 

int main() {
	
	printf("----------------图的拓扑排序（邻接表）演示程序------------------\n\n"); 
	
	//图的邻接表存储方式 
	ALGraph G;
	
	//创建图g并打印初始状态 
	printf("->测试图G的创建：(拓扑排序需要图的类型为有向图，请输入0)\n"); 
	CreateGraph(G);
	printf("图G创建成功！\n");
	printf("->打印创建后的图G：\n"); 
	Display(G);
	
	//测试拓扑排序 
	printf("\n->拓扑排序结果："); 
	TopologicalSort(G);
	
	//测试销毁图G
	printf("\n->测试销毁图G:"); 
	DestroyGraph(G);
	printf("销毁成功！");
	
	printf("演示结束");
}//main

/*
	参考书上P182页图7.28 

----------------图的拓扑排序（邻接表）演示程序------------------

->测试图G的创建：(拓扑排序需要图的类型为有向图，请输入0)
请输入图的类型(有向图输入0, 有向网输入1,无向图输入2,无向网输入3): 0
请输入图的顶点数,边数: 6,8
请输入6个顶点的值(用空格隔开):
1 2 3 4 5 6
请输入每条弧(边)的弧尾和弧头(以逗号作为间隔):
1,2
1,3
1,4
3,2
3,5
4,5
6,4
6,5
图G创建成功！
->打印创建后的图G：
此图为有向图!

图中共有6个顶点，8条弧(边)，它们分别是：
+----+-----------------------------------------------
|顶点|   邻接顶点(和权值)
+----+-----------------------------------------------
|  1 | →4  →3  →2
+----+-----------------------------------------------
|  2 |
+----+-----------------------------------------------
|  3 | →5  →2
+----+-----------------------------------------------
|  4 | →5
+----+-----------------------------------------------
|  5 |
+----+-----------------------------------------------
|  6 | →5  →4
+----+-----------------------------------------------


->拓扑排序结果： 6  1  3  2  4  5
->测试销毁图G:销毁成功！演示结束
--------------------------------
Process exited with return value 0
Press any key to continue . . .
*/ 
